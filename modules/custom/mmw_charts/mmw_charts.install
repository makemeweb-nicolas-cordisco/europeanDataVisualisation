<?php
/**
 * @file
 * MMW Charts Install file.
 *
 * @brief The install file for Drupal module.
 *
 * @package mmw_charts
 *
 * @author Makemeweb
 */

/**
 * Implements hook_install().
 */
function mmw_charts_install() {
  // Array of information for our content type.
  $type = array(
    'type' => 'advanced_fusioncharts',
    'name' => t('Advanced Fusioncharts'),
    'base' => 'node_content',
    'description' => t("Add Excel file in node for generate chart page"),
    'custom' => 1,
    'modified' => 1,
    'locked' => 0,
  );
  // Create all the fields we are adding to our content type.
  foreach (_mmw_charts_installed_fields() as $field) {
    field_create_field($field);
  }
  // Set the default values for our content type.
  $type = node_type_set_defaults($type);
  // Save our content type to the database.
  node_type_save($type);
  // Add the body field to our content type.
  node_add_body_field($type, t('Description'));
  // Create the instances for our fields and attach to our content type.
  foreach (_mmw_charts_installed_instances() as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = 'advanced_fusioncharts';
    field_create_instance($instance);
  }

  // Message after installation is completed.
  $library = libraries_load('PHPExcel');
  if (empty($library['loaded'])) {
    drupal_set_message(t('Makemeweb Charts installed successfully. PHPExcel is not loaded, please check in !status_report for more information.', array('!status_report' => l(t('Status report'), 'admin/reports/status'))));
  }
  else {
    drupal_set_message(t('Makemeweb Charts installed successfully.'));
  }
}

/**
 * Declaration array of fields used on content type.
 *
 * @return array $fields
 *   Array of fields parameters
 */
function _mmw_charts_installed_fields() {
  $fields = array(
    'mmw_charts_year' => array(
      'field_name'  => 'mmw_charts_year',
      'cardinality' => 1,
      'type'        => 'number_integer',
    ),
    'mmw_charts_data_type' => array(
      'field_name'  => 'mmw_charts_data_type',
      'cardinality' => 1,
      'type' => 'list_text',
      'module' => 'list',
      'settings' => array(
        'allowed_values_function' => 'mmw_charts_data_type_values_callback',
      ),
    ),
    'mmw_charts_excel_file' => array(
      'field_name'  => 'mmw_charts_excel_file',
      'cardinality' => 1,
      'type'        => 'file',
    ),
    'mmw_charts_json' => array(
      'field_name'  => 'mmw_charts_json',
      'cardinality' => 1,
      'type'        => 'text_long',
    ),
  );
  return $fields;
}

/**
 * Array of fields for instances.
 *
 * @return array $fields
 *   Array of fields parameters
 */
function _mmw_charts_installed_instances() {
  $fields = array();

  $fields['mmw_charts_year'] = array(
    'field_name'  => 'mmw_charts_year',
    'label' => t('Year'),
    'type'        => 'number_integer',
    'widget'      => array(
      'type'    => 'number',
    ),
  );
  $fields['mmw_charts_data_type'] = array(
    'field_name'  => 'mmw_charts_data_type',
    'label' => t('Data_type'),
    'type'        => 'list',
    'widget'      => array(
      'type'    => 'options_select',
    ),
  );
  $fields['mmw_charts_excel_file'] = array(
    'field_name'  => 'mmw_charts_excel_file',
    'label' => t('Excel_file'),
    'type'        => 'file',
    'widget'      => array(
      'type'    => 'file_generic',
    ),
    'settings' => array(
      'file_extensions' => 'xls xlsx',
      'file_directory' => 'mmw_charts/excel',
    ),
  );
  $fields['mmw_charts_json'] = array(
    'field_name'  => 'mmw_charts_json',
    'label' => t('Json'),
    'type'        => 'text_long',
    'widget'      => array(
      'type'    => 'text_textarea',
    ),
  );
  $fields['mmw_charts_data_type'] = array(
    'field_name'  => 'mmw_charts_data_type',
    'label' => t('Data_type'),
    'type'        => 'list',
    'widget'      => array(
      'type'    => 'options_select',
    ),
  );
  return $fields;
}

/**
 * Implements hook_uninstall().
 */
function mmw_charts_uninstall() {
  // Array of field to deleted.
  $fields_to_delete = array(
    'mmw_charts_year',
    'mmw_charts_data_type',
    'mmw_charts_excel_file',
    'mmw_charts_json',
  );
  // Get all nodes of our content type.
  $query = db_select('node', 'n')
      ->fields('n', array('nid'))
      ->condition('type', 'advanced_fusioncharts', '=');
  $result = $query->execute();
  // Get node id of nodes.
  $nodeids = array();
  foreach ($result as $row) {
    $nodeids[] = $row->nid;
  }
  // Delete node by array of node ids.
  node_delete_multiple($nodeids);
  // For each field to delete, delete it and add message in watchdog.
  foreach ($fields_to_delete as $field_name) {
    field_delete_field($field_name);
    watchdog('mmw_charts', 'Deleted the :field_name field from all content type instances.', array(':field_name' => $field_name));
  }
  // Delete our content type.
  node_type_delete('advanced_fusioncharts');
  watchdog('mmw_charts', 'Deleted the :content_type_name content type.', array(':content_type_name' => 'advanced_fusioncharts'));

  // The fields aren't really deleted until the purge function runs, ordinarily
  // during cron.  Count the number of fields we need to purge, and add five in
  // case a few other miscellaneous fields are in there somehow.
  field_purge_batch(count($fields_to_delete) + 5);
  // Updates the database cache of node types and menu.
  node_types_rebuild();
  menu_rebuild();
}

/**
 * Implements hook_requirements().
 */
function mmw_charts_requirements($phase) {
  if ($phase == 'runtime') {
    $library = libraries_load('PHPExcel');

    if (empty($library['loaded'])) {
      return array(
        'mmw_charts_phpexcel' => array(
          'title' => t("MMW Charts: PHPExcel"),
          'value' => '>1.7.8',
          'description' => t("In order to use PHPExcel, you must first download the entire library (1.8.*) at !link and put it under sites/*/libraries/PHPExcel/ (so you should have sites/*/libraries/PHPExcel/Classes/PHPExcel.php). Make sure to include the changelog.txt file as well (sites/*/libraries/PHPExcel/changelog.txt), as Library API requires this file for loading the classes.", array('!link' => '<a href="https://github.com/PHPOffice/PHPExcel">Github</a>')),
          'severity' => REQUIREMENT_ERROR,
        ),
      );
    }
    else {
      return array(
        'mmw_charts_phpexcel' => array(
          'title' => t("MMW Charts: PHPExcel"),
          'value' => t("PHPExcel @version", array('@version' => $library['version'])),
          'severity' => REQUIREMENT_OK,
        ),
      );
    }
  }
  return array();
}
